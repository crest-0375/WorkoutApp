// Generated by view binder compiler. Do not edit!
package com.example.workoutapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workoutapp.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBmiBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Toolbar bmiActivityToolbar;

  @NonNull
  public final Button btnCalculate;

  @NonNull
  public final AppCompatEditText etMetricUnitHeight;

  @NonNull
  public final AppCompatEditText etMetricUnitWeight;

  @NonNull
  public final AppCompatEditText etUsUnitFeet;

  @NonNull
  public final AppCompatEditText etUsUnitInch;

  @NonNull
  public final LinearLayout llBmiResult;

  @NonNull
  public final LinearLayout llUsUnit;

  @NonNull
  public final RadioButton rbMetricUnit;

  @NonNull
  public final RadioButton rbUsUnit;

  @NonNull
  public final RadioGroup rgUnits;

  @NonNull
  public final TextInputLayout tilMetricUnitHeight;

  @NonNull
  public final TextInputLayout tilMetricUnitWeight;

  @NonNull
  public final TextInputLayout tilUsUnitFeet;

  @NonNull
  public final TextInputLayout tilUsUnitInch;

  @NonNull
  public final TextView tvBmiDescription;

  @NonNull
  public final TextView tvBmiText;

  @NonNull
  public final TextView tvYourBmi;

  private ActivityBmiBinding(@NonNull LinearLayout rootView, @NonNull Toolbar bmiActivityToolbar,
      @NonNull Button btnCalculate, @NonNull AppCompatEditText etMetricUnitHeight,
      @NonNull AppCompatEditText etMetricUnitWeight, @NonNull AppCompatEditText etUsUnitFeet,
      @NonNull AppCompatEditText etUsUnitInch, @NonNull LinearLayout llBmiResult,
      @NonNull LinearLayout llUsUnit, @NonNull RadioButton rbMetricUnit,
      @NonNull RadioButton rbUsUnit, @NonNull RadioGroup rgUnits,
      @NonNull TextInputLayout tilMetricUnitHeight, @NonNull TextInputLayout tilMetricUnitWeight,
      @NonNull TextInputLayout tilUsUnitFeet, @NonNull TextInputLayout tilUsUnitInch,
      @NonNull TextView tvBmiDescription, @NonNull TextView tvBmiText,
      @NonNull TextView tvYourBmi) {
    this.rootView = rootView;
    this.bmiActivityToolbar = bmiActivityToolbar;
    this.btnCalculate = btnCalculate;
    this.etMetricUnitHeight = etMetricUnitHeight;
    this.etMetricUnitWeight = etMetricUnitWeight;
    this.etUsUnitFeet = etUsUnitFeet;
    this.etUsUnitInch = etUsUnitInch;
    this.llBmiResult = llBmiResult;
    this.llUsUnit = llUsUnit;
    this.rbMetricUnit = rbMetricUnit;
    this.rbUsUnit = rbUsUnit;
    this.rgUnits = rgUnits;
    this.tilMetricUnitHeight = tilMetricUnitHeight;
    this.tilMetricUnitWeight = tilMetricUnitWeight;
    this.tilUsUnitFeet = tilUsUnitFeet;
    this.tilUsUnitInch = tilUsUnitInch;
    this.tvBmiDescription = tvBmiDescription;
    this.tvBmiText = tvBmiText;
    this.tvYourBmi = tvYourBmi;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBmiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBmiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bmi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBmiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bmi_activity_toolbar;
      Toolbar bmiActivityToolbar = ViewBindings.findChildViewById(rootView, id);
      if (bmiActivityToolbar == null) {
        break missingId;
      }

      id = R.id.btn_calculate;
      Button btnCalculate = ViewBindings.findChildViewById(rootView, id);
      if (btnCalculate == null) {
        break missingId;
      }

      id = R.id.et_metric_unit_height;
      AppCompatEditText etMetricUnitHeight = ViewBindings.findChildViewById(rootView, id);
      if (etMetricUnitHeight == null) {
        break missingId;
      }

      id = R.id.et_metric_unit_weight;
      AppCompatEditText etMetricUnitWeight = ViewBindings.findChildViewById(rootView, id);
      if (etMetricUnitWeight == null) {
        break missingId;
      }

      id = R.id.et_us_unit_feet;
      AppCompatEditText etUsUnitFeet = ViewBindings.findChildViewById(rootView, id);
      if (etUsUnitFeet == null) {
        break missingId;
      }

      id = R.id.et_us_unit_inch;
      AppCompatEditText etUsUnitInch = ViewBindings.findChildViewById(rootView, id);
      if (etUsUnitInch == null) {
        break missingId;
      }

      id = R.id.ll_bmi_result;
      LinearLayout llBmiResult = ViewBindings.findChildViewById(rootView, id);
      if (llBmiResult == null) {
        break missingId;
      }

      id = R.id.ll_us_unit;
      LinearLayout llUsUnit = ViewBindings.findChildViewById(rootView, id);
      if (llUsUnit == null) {
        break missingId;
      }

      id = R.id.rb_metric_unit;
      RadioButton rbMetricUnit = ViewBindings.findChildViewById(rootView, id);
      if (rbMetricUnit == null) {
        break missingId;
      }

      id = R.id.rb_us_unit;
      RadioButton rbUsUnit = ViewBindings.findChildViewById(rootView, id);
      if (rbUsUnit == null) {
        break missingId;
      }

      id = R.id.rg_units;
      RadioGroup rgUnits = ViewBindings.findChildViewById(rootView, id);
      if (rgUnits == null) {
        break missingId;
      }

      id = R.id.til_metric_unit_height;
      TextInputLayout tilMetricUnitHeight = ViewBindings.findChildViewById(rootView, id);
      if (tilMetricUnitHeight == null) {
        break missingId;
      }

      id = R.id.til_metric_unit_weight;
      TextInputLayout tilMetricUnitWeight = ViewBindings.findChildViewById(rootView, id);
      if (tilMetricUnitWeight == null) {
        break missingId;
      }

      id = R.id.til_us_unit_feet;
      TextInputLayout tilUsUnitFeet = ViewBindings.findChildViewById(rootView, id);
      if (tilUsUnitFeet == null) {
        break missingId;
      }

      id = R.id.til_us_unit_inch;
      TextInputLayout tilUsUnitInch = ViewBindings.findChildViewById(rootView, id);
      if (tilUsUnitInch == null) {
        break missingId;
      }

      id = R.id.tv_bmi_description;
      TextView tvBmiDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvBmiDescription == null) {
        break missingId;
      }

      id = R.id.tv_bmi_text;
      TextView tvBmiText = ViewBindings.findChildViewById(rootView, id);
      if (tvBmiText == null) {
        break missingId;
      }

      id = R.id.tv_your_bmi;
      TextView tvYourBmi = ViewBindings.findChildViewById(rootView, id);
      if (tvYourBmi == null) {
        break missingId;
      }

      return new ActivityBmiBinding((LinearLayout) rootView, bmiActivityToolbar, btnCalculate,
          etMetricUnitHeight, etMetricUnitWeight, etUsUnitFeet, etUsUnitInch, llBmiResult, llUsUnit,
          rbMetricUnit, rbUsUnit, rgUnits, tilMetricUnitHeight, tilMetricUnitWeight, tilUsUnitFeet,
          tilUsUnitInch, tvBmiDescription, tvBmiText, tvYourBmi);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
